{
  "hash": "7a4417cc5b2ed45c58e7bdf73312ea8d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Estimating Covid-19 Dynamics and Clinical Detection Rate using the SEIR N-Mixture Model\"\nauthor: \"Ben Brintz\"\ninstitute: \"Division of Epidemiology\"\nformat: \n  revealjs:\n    auto-animate-easing: ease-in-out\n    auto-animate-unmatched: false\n    auto-animate-duration: 2\n    revealjs-plugins: \n    theme: white\n    incremental: true\n    scrollable: true\n    slideNumber: true  # Slide numbers (optional)\n    transition: fade   # Smooth slide transitions\n    title-slide-background: \"white\" # Ensure title slide background matches your style\n    css: custom.css    # Link to your custom CSS file\n\n---\n\n\n## \n\n::: {.callout-caution title=\"Warning\" .fragment index=\"1\"}\nThis presentation will not include equations \n:::\n\n::: {.callout-caution title=\"Warning\" .fragment index=\"2\"}\nYou will not have to learn notation \n:::\n\n::: {.fragment index=\"3\" .fade-up}\n\nUnless you really want to!\n:::\n\n## The Covid-19 pandemic highlighted the challenge of imperfect detection in disease surveillance {}\n\n- Case reports undercount true infections due to asymptomatic cases and lack of access to testing\n- Only the sickest got diagnosed with Covid early in the pandemic \n- \"We must rely on data\nfrom people who are sick enough to get themselves tested, which is a bit like trying to understand exercise\ntrends among average Americans by surveying the participants of a marathon\"\n\n## Various approaches have been developed to estimate clinical detection rates {}\n\n- **Back-calculation methods** estimate the number of infections from hospitalizations and deaths\n- **Seroprevalence studies** estimate the proportion of the population that has been infected by testing for antibodies\n- **SEIR models** estimate the number of infections from observed cases and the distribution of the incubation period\n\n## Covid-19's incubation period requires an extension to the SIR compartment model {}\n\n- **SIR model** assumes that individuals\ntransition directly from susceptible to infectious\n- **SEIR model** adds an exposed compartment to account for the incubation period\n- **SEIR models** don't directly account for imperfect detection\n\n## N-mixture models account for imperfect detection and have been applied to disease\n\n- **N-mixture models** are traditionally used in ecology to estimate the abundance of a species from counts under the imperfect detection assumption\n    - American Robin\n    - Oregon Slender Salamander \n- Initial extensions of the **N-mixture model** allowed for survival and recruitment processes much like you would see in a compartment model\n\n## SEIR N-mixture model extends the N-mixture model to account for the incubation period and imperfect detection and population size \n- Individuals transition from susceptible to exposed to infectious\n- Observed counts are a function of the number of infectious individuals and the clinical detection rate\n- Our formulation was inspired by N-\nmixture models, but we put imperfect detection on incidence cases instead\nof prevalent cases, similar to updatea SEIR latent space model\n\n## Our study has a number of novelties in the imperfect detection space \n- Model estimation allows for different start times of infections across health-districts\n-   <span class=\"blur-text\">Estimating an evolving transmission rate using a hierarchical AR(1) process</span>\n-   <span class=\"blur-text\">Estimating an evolving recovery rate and incubation using beta-binomial transitions </span>\n-   <span class=\"blur-text\">A novel computational solution to estimating dynamics in a discrete transmission model using a continuous approximation in STAN</span>\n\n## Model estimation allows for different start times of infections across health-districts\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-1-1.png){width=960}\n:::\n:::\n\n\n## Our study has a number of novelties in the imperfect detection space \n- Model estimation allows for different start times of infections across health-districts\n-   Estimating an evolving transmission rate using a hierarchical AR(1) process\n-   <span class=\"blur-text\">Estimating an evolving recovery rate and incubation using beta-binomial transitions </span>\n-   <span class=\"blur-text\">A novel computational solution to estimating dynamics in a discrete transmission model using a continuous approximation in STAN</span>\n\n\n## Estimating an evolving transmission rate using a hierarchical AR(1) process\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-2-1.png){width=960}\n:::\n:::\n\n\n## Estimating an evolving transmission rate using a hierarchical AR(1) process\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-3-1.gif)\n:::\n:::\n\n\n## Our study has a number of novelties in the imperfect detection space \n- Model estimation allows for different start times of infections across health-districts\n- Estimating an evolving transmission rate using a hierarchical AR(1) process\n- Estimating an evolving recovery rate and incubation using beta-binomial transitions \n-   <span class=\"blur-text\">A novel computational solution to estimating dynamics in a discrete transmission model using a continuous approximation in STAN</span>\n\n\n## Estimating an evolving recovery rate and incubation using beta-binomial transitions \n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-4-1.gif)\n:::\n:::\n\n\n## Model Formulation {auto-animate=\"true\"}\n\n$$\n\\begin{aligned}\nI_{if_1} &= c,\\\\[6pt]\nEI_{if_i} &= I_{if_i},\\\\[6pt]\nS_{if_i} &= N_i - EI_{if_i}.\n\\end{aligned}\n$$\n\n\n\n\n## Model Formulation {auto-animate=\"true\"}\n\n\n**For \\(t > f_{i}\\):**\n\n$$\n\\begin{aligned}\nSE_{it} &\\sim \\text{Binomial}\\!\\Bigl(S_{it-1},\\,1 - \\exp\\!\\Bigl(-\\tfrac{\\beta_{it}I_{it-1}}{N}\\Bigr)\\Bigr),\\\\[6pt]\nEI_{it} &\\sim \\text{BetaBinomial}\\!\\Bigl(E_{it-1},\\,1 - \\exp(-\\eta_i),\\,\\rho_{EI}\\Bigr),\\\\[6pt]\nIR_{it} &\\sim \\text{BetaBinomial}\\!\\Bigl(I_{it-1},\\,1 - \\exp(-\\gamma_i),\\,\\rho_{IR}\\Bigr),\\\\[6pt]\n\\end{aligned}\n$$\n\n$$\n\\begin{aligned}\nI_{if_1} &= c,\\\\[6pt]\nEI_{if_i} &= I_{if_i},\\\\[6pt]\nS_{if_i} &= N_i - EI_{if_i}.\n\\end{aligned}\n$$\n\n## Model Formulation {auto-animate=\"true\"}\n$$\n\\begin{aligned}\nS_{it} &= S_{it-1} - SE_{it},\\\\[6pt]\nE_{it} &= \n  \\begin{cases}\n    SE_{it}, & \\text{if } t = f_i + 1,\\\\[6pt]\n    E_{it-1} + SE_{it} - EI_{it}, & \\text{if } t > f_i + 1,\n  \\end{cases}\\\\[6pt]\nI_{it} &= I_{it-1} + EI_{it} - IR_{it},\\\\[6pt]\nii_{it} &\\sim \\text{Binomial}\\!\\Bigl(EI_{it},\\,p\\Bigr)\n\\end{aligned}\n$$\n\n$$\n\\begin{aligned}\nSE_{it} &\\sim \\text{Binomial}\\!\\Bigl(S_{it-1},\\,1 - \\exp\\!\\Bigl(-\\tfrac{\\beta_{it}I_{it-1}}{N}\\Bigr)\\Bigr),\\\\[6pt]\nEI_{it} &\\sim \\text{BetaBinomial}\\!\\Bigl(E_{it-1},\\,1 - \\exp(-\\eta_i),\\,\\rho_{EI}\\Bigr),\\\\[6pt]\nIR_{it} &\\sim \\text{BetaBinomial}\\!\\Bigl(I_{it-1},\\,1 - \\exp(-\\gamma_i),\\,\\rho_{IR}\\Bigr),\\\\[6pt]\n\\end{aligned}\n$$\n\n$$\n\\begin{aligned}\nI_{if_1} &= c,\\\\[6pt]\nEI_{if_i} &= I_{if_i},\\\\[6pt]\nS_{if_i} &= N_i - EI_{if_i}.\n\\end{aligned}\n$$\n\n## My Slide Title {.no-incremental}\n\n::: {.fragment data-fragment-type=\"replace\" data-fragment-index=\"1\"}\nAppears first\n:::\n\n::: {.fragment data-fragment-type=\"replace\" data-fragment-index=\"2\"}\nAppears second\n:::\n\n::: {.fragment data-fragment-type=\"replace\" data-fragment-index=\"3\"}\nAppears last\n:::\n\n## Test\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}