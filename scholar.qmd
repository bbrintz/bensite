---
format:
  html:
    toc: false
    code-fold: false
freeze: auto
---
::: {=html}
<style>
body {
  background-color: #040113ff;

}
a, a:link, a:visited {
  color: white;
}
a:hover, a:active {
  color: #EEEEEE;
}


/* Ensure Link column doesn't wrap */
.gt_table td:nth-last-child(1),
.gt_table th:nth-last-child(1) {
  white-space: nowrap;
  min-width: 80px;
}

/* Force gt table to be transparent on dark backgrounds */
.gt_table_container { background-color: transparent !important; }
.gt_table,
.gt_table .gt_heading,
.gt_table .gt_title,
.gt_table .gt_subtitle,
.gt_table .gt_col_headings,
.gt_table .gt_table_body,
.gt_table .gt_row,
.gt_table .gt_group_heading,
.gt_table .gt_sourcenotes,
.gt_table .gt_footnotes,
.gt_table .gt_stub,
.gt_table .gt_stub_row_group,
.gt_table .gt_column_spanner,
.gt_table .gt_column_spanner_outer,
.gt_table .gt_empty_group_heading {
  background-color: transparent !important;
  color: #ffffff !important;
}
/* Make gt table headers transparent */
.gt_table .gt_col_heading,
.gt_table .gt_column_spanner_outer,
.gt_table .gt_column_spanner {
  background-color: transparent !important;
}
/* Force column heading text to white */
.gt_table .gt_col_heading {
  color: #ffffff !important;
}
/* Reaffirm transparent backgrounds for heading/title/subtitle */
.gt_table .gt_heading,
.gt_table .gt_title,
.gt_table .gt_subtitle {
  background-color: transparent !important;
}
/* Remove zebra striping/gradients if present */
.gt_table .gt_striped {
  background-color: transparent !important;
  background-image: none !important;
}
/* Subtle borders that work on dark mode */
.gt_table, .gt_table th, .gt_table td {
  border-color: rgba(255,255,255,0.25) !important;
}
/* Links inside the table */
.gt_table a, .gt_table a:link, .gt_table a:visited {
  color: #ffffff !important;
  text-decoration: underline;
}
.gt_table a:hover, .gt_table a:active {
  color: #EEEEEE !important;
}
</style>
:::
```{r, include=TRUE, echo=FALSE,message=FALSE, warning=FALSE}
# install.packages("scholar") # run once
library(dplyr)
library(glue)
library(gt)
library(scholar)

id <- "nYA8PAsAAAAJ"  # Ben Brintz

# pull publications & guard against failures
pubs <- tryCatch(get_publications(id), error = function(e) NULL)

if (is.null(pubs) || !nrow(pubs)) {
  cat("⚠️ Could not retrieve publications from Google Scholar right now. Please re-render later.")
} else {
  top10 <- pubs |>
    mutate(year = suppressWarnings(as.integer(year))) |>
    arrange(desc(cites), desc(year)) |>
    slice_head(n = 10) |>
    mutate(
      # Build a stable link to the Scholar record
      link = glue(
        "https://scholar.google.com/citations?view_op=view_citation&user={id}&citation_for_view={id}:{pubid}"
      ),
      Title = ifelse(is.na(year), title, glue("{title} ({year})"))
    ) |>
    transmute(
      Title,
      Venue = journal,
      Citations = cites,
      Link = glue("<a href='{link}'>Scholar</a>")
    )

  gt(top10) |>
    fmt_markdown(columns = "Link") |>
    tab_header(title = md("**Top 10 Cited Publications**")) |>
    cols_label(Venue = "Journal")
}
```
