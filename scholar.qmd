---
format:
  html:
    toc: false
    code-fold: false
freeze: auto
---
::: {=html}
<style>
.pub-heading {
  color: white;
}
body {
  background-color: #0f172a;

}
a, a:link, a:visited {
  color: white;
}
a:hover, a:active {
  color: #EEEEEE;
}


/* Ensure Link column doesn't wrap */
.gt_table td:nth-last-child(1),
.gt_table th:nth-last-child(1) {
  white-space: nowrap;
  min-width: 80px;
}

/* Force gt table to be transparent on dark backgrounds */
.gt_table_container { background-color: transparent !important; }
/* Increase contrast and add text shadow for better readability */
.gt_table,
.gt_table .gt_heading,
.gt_table .gt_title,
.gt_table .gt_subtitle,
.gt_table .gt_col_headings,
.gt_table .gt_table_body,
.gt_table .gt_row,
.gt_table .gt_group_heading,
.gt_table .gt_sourcenotes,
.gt_table .gt_footnotes,
.gt_table .gt_stub,
.gt_table .gt_stub_row_group,
.gt_table .gt_column_spanner,
.gt_table .gt_column_spanner_outer,
.gt_table .gt_empty_group_heading {
  background-color: transparent !important;
  color: #d9d9d9 !important;
  text-shadow: 0 0 4px rgba(0,0,0,0.7);
}
/* Make gt table headers transparent */
.gt_table .gt_col_heading,
.gt_table .gt_column_spanner_outer,
.gt_table .gt_column_spanner {
  background-color: transparent !important;
}
/* Force column heading text to lighter color and add text shadow */
.gt_table .gt_col_heading {
  color: #d9d9d9 !important;
  text-shadow: 0 0 4px rgba(0,0,0,0.7);
}
/* Reaffirm transparent backgrounds for heading/title/subtitle */
.gt_table .gt_heading,
.gt_table .gt_title,
.gt_table .gt_subtitle {
  background-color: transparent !important;
}
/* Remove zebra striping/gradients if present */
.gt_table .gt_striped {
  background-color: transparent !important;
  background-image: none !important;
}
/* Subtle borders that work on dark mode */
.gt_table, .gt_table th, .gt_table td {
  border-color: rgba(255,255,255,0.25) !important;
}
/* Style links in gt_table for higher contrast and readability */
.gt_table a, .gt_table a:link, .gt_table a:visited {
  color: #d9d9d9 !important;
  text-decoration: underline;
  text-shadow: 0 0 4px rgba(0,0,0,0.7);
}
.gt_table a:hover, .gt_table a:active {
  color: #163D6B !important;
}

/* Highlight table text on hover */
.gt_table td:hover,
.gt_table th:hover {
  color: #ffffff !important; /* brighten text */
  text-shadow: 0 0 6px rgba(255,255,255,0.8);
  background-color: rgba(255,255,255,0.05) !important; /* subtle background highlight */
  transition: all 0.2s ease;
}




/* --- Playful circular publication badges --- */
/* --- Playful circular publication badges --- */
.pub-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
  gap: 20px;
  margin: 2rem 0 3rem 0;
}
.pub-bubble {
  position: relative;
  background: rgba(255,255,255,0.08);
  border: 1px solid rgba(255,255,255,0.25);
  border-radius: 50%;
  padding: 18px;
  min-height: 150px;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  color: #d9d9d9;
  box-shadow: 0 6px 18px rgba(0,0,0,0.35);
  transition: transform 220ms ease, box-shadow 220ms ease, background 220ms ease;
}
/* Slight quirky angles; snap to straight on hover */

.pub-title { font-weight: 600; line-height: 1.25; font-size: 0.85rem; }

 .pub-bubble:hover {
   transform: scale(1.12);
   background: rgba(255,255,255,0.12);
   box-shadow: 0 16px 42px rgba(0,0,0,0.55);
   z-index: 5;                   /* sit above neighbors while zoomed */
   outline: 1px solid rgba(255,255,255,0.35);
 }

 .pub-grid { perspective: 1000px; }
 .pub-grid { overflow: visible; }
 .pub-bubble { overflow: visible; }
 .pub-bubble { will-change: transform; transform-origin: center; }
 .pub-bubble { cursor: pointer; }
 .pub-bubble .pub-title { pointer-events: none; }

/* Lightweight JS-driven tooltip */
.pub-tooltip {
  position: absolute;
  z-index: 9999;
  max-width: 320px;
  padding: 10px 12px;
  border-radius: 12px;
  background: rgba(0,0,0,0.70);
  color: #f1f1f1;
  font-size: 0.92rem;
  line-height: 1.25;
  box-shadow: 0 8px 24px rgba(0,0,0,0.5);
  pointer-events: auto; /* allow hovering/clicking links */
  opacity: 0;
  transform: translateY(6px);
  transition: opacity 120ms ease, transform 120ms ease;
}
.pub-tooltip.show { opacity: 1; transform: translateY(0); }
.pub-tooltip .tip-actions { margin-top: 8px; }
.pub-tooltip a { color: #d9d9d9 !important; text-decoration: underline; }
.pub-tooltip a:hover { color: #ffffff !important; }

/* Link styling inside bubbles */
.pub-actions { margin-top: 8px; font-size: 0.9rem; }
.pub-actions a { color: #d9d9d9 !important; text-decoration: underline; }
.pub-actions a:hover { color: #ffffff !important; }

/* Respect reduced motion */
@media (prefers-reduced-motion: reduce) {
  .pub-bubble, .pub-detail { transition: none; }
  .pub-bubble { transform: none !important; }
}



</style>
:::

<script>
  (function(){
    const v = document.getElementById('bg-video');
    // Fade in when we have enough to play
    v.addEventListener('loadeddata', () => { v.style.opacity = 1; }, { once: true });
    // As a safety, fade in after 1s even if the event is slow
    setTimeout(() => { if (v.style.opacity === '' || v.style.opacity === '0') v.style.opacity = 1; }, 1000);
  })();
</script>


```{r, include=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results='asis'}
# install.packages("scholar") # run once
library(dplyr)
library(glue)
library(gt)
library(scholar)
library(htmltools)

id <- "nYA8PAsAAAAJ"  # Ben Brintz

# pull publications & guard against failures
pubs <- tryCatch(get_publications(id), error = function(e) NULL)

if (is.null(pubs) || !nrow(pubs)) {
  cat("⚠️ Could not retrieve publications from Google Scholar right now. Please re-render later.")
} else {
  top10 <- pubs |>
    mutate(year = suppressWarnings(as.integer(year))) |>
    arrange(desc(cites), desc(year)) |>
    slice_head(n = 9) |>
    mutate(
      # Build a stable link to the Scholar record
      link = glue(
        "https://scholar.google.com/citations?view_op=view_citation&user={id}&citation_for_view={id}:{pubid}"
      ),
      Title = ifelse(is.na(year), title, glue("{title} ({year})"))
    ) |>
    transmute(
      Title,
      Venue = journal,
      Citations = cites,
      LinkURL = link
    )

  cat("<h2 class='pub-heading'>Top Publications</h2>")
  cat("<div class='pub-grid'>")
  for (i in seq_len(nrow(top10))) {
    title <- top10$Title[i]
    venue <- top10$Venue[i]
    cites <- top10$Citations[i]
    link_url <- top10$LinkURL[i]
    bubble <- htmltools::tags$div(
      class = 'pub-bubble',
      `data-venue` = venue,
      `data-cites` = cites,
      `data-link`  = link_url,
      role = 'button', tabindex = 0,
      htmltools::tags$div(class = 'pub-title', title)
    )
    cat(htmltools::renderTags(bubble)$html)
  }
  cat("</div>")
  cat("<script>\n( function(){\n  const grid = document.querySelector('.pub-grid');\n  if(!grid) return;\n  let tip = document.createElement('div');\n  tip.className = 'pub-tooltip';\n  document.body.appendChild(tip);\n  let currentEl = null;\n\n  function showTip(el){\n    currentEl = el;\n    const venue = el.getAttribute('data-venue') || '';\n    const cites = el.getAttribute('data-cites') || '';\n    const link  = el.getAttribute('data-link')  || '#';\n    tip.innerHTML = `<div><strong>Journal:</strong> ${venue}</div>`+\n                    `<div><strong>Citations:</strong> ${cites}</div>`+\n                    `<div class=\"tip-actions\"><a href=\"${link}\" target=\"_blank\" rel=\"noopener\">Scholar</a></div>`;\n    positionTip(el);\n    tip.classList.add('show');\n  }\n\n  function positionTip(el){\n    const r = el.getBoundingClientRect();\n    const x = r.left + r.width/2; const y = r.top;\n    tip.style.left = Math.max(12, Math.min(window.innerWidth-12-320, x-160)) + 'px';\n    tip.style.top  = (window.scrollY + y - tip.offsetHeight - 12) + 'px';\n  }\n\n  grid.addEventListener('mouseover', e=>{\n    const el = e.target.closest('.pub-bubble');\n    if(!el) return; showTip(el);\n  });\n  grid.addEventListener('mousemove', e=>{\n    if(!tip.classList.contains('show')) return; \n    const el = e.target.closest('.pub-bubble') || currentEl;\n    if(!el) return; positionTip(el);\n  });\n  grid.addEventListener('mouseout', e=>{\n    const to = e.relatedTarget;\n    if(to && (to === tip || (to.closest && to.closest('.pub-tooltip')))) return; // stay visible when entering tooltip\n    const leavingBubble = e.target.closest && e.target.closest('.pub-bubble');\n    const toBubble = to && to.closest && to.closest('.pub-bubble');\n    if(leavingBubble && toBubble === leavingBubble) return; // moving inside same bubble\n    if(!toBubble) { currentEl = null; hideTip(); }\n  });\n  // Open Scholar on click/Enter\n  grid.addEventListener('click', e=>{\n    const el = e.target.closest('.pub-bubble');\n    if(!el) return; const link = el.getAttribute('data-link');\n    if(link) window.open(link, '_blank', 'noopener');\n  });\n  grid.addEventListener('keydown', e=>{\n    if(e.key === 'Enter' || e.key === ' ') {\n      const el = e.target.closest('.pub-bubble');\n      if(!el) return; const link = el.getAttribute('data-link');\n      if(link) window.open(link, '_blank', 'noopener');\n    }\n  });\n  tip.addEventListener('mouseleave', ()=>{ currentEl = null; hideTip(); });\n  tip.addEventListener('mouseenter', ()=>{ /* keep visible */ });\n\n  // Ensure clicks on links inside the tooltip always work\n  tip.addEventListener('click', (e)=>{\n    const a = e.target.closest('a[href]');\n    if(!a) return;\n    e.preventDefault();\n    try { window.open(a.href, '_blank', 'noopener'); }\n    catch(_) { location.href = a.href; }\n  });\n\n  function hideTip(){ tip.classList.remove('show'); }\n\n})();\n</script>\n")
}
```
